name: Release Management

on:
  push:
    branches:
      - "release/**"

jobs:
  action_filter:
    name: Filter Action
    runs-on: ubuntu-latest
    if: "github.event_name != 'pull_request'"
    steps:
      - name: Echo the greeting
        run: echo 'Release workflow triggered.'
  create_release:
    name: Create New Release
    runs-on: ubuntu-latest
    needs: [action_filter]
    steps:
      - uses: actions/checkout@v2
      - name: Get Version name
        id: get_version
        run: echo "##[set-output name=version;]$(echo ${GITHUB_REF#refs/heads/} | awk -F'/' '{print $2}')"
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Merge master
        run: |
          git config --global user.email "royinx.cicd@gmail.com"
          git config --global user.name "CICD-machine-user"
          git fetch --unshallow
          git merge origin/master -s ours --no-edit
      - name: Commit and Push merge
        uses: github-actions-x/commit@v2.6
        with:
          github-token: ${{ secrets.CICD_CREDENTIALS }}
          push-branch: ${{ steps.extract_branch.outputs.branch }}
          commit-message: "chore: merge in master"
      - uses: dev-drprasad/delete-tag-and-release@v0.1.2
        with:
          delete_release: true
          tag_name: ${{ steps.get_version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.CICD_CREDENTIALS }}
      - uses: hole19/git-tag-action@master
        env:
          TAG: ${{ steps.get_version.outputs.version }}
          GITHUB_TOKEN: ${{ secrets.CICD_CREDENTIALS }}
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.CICD_CREDENTIALS }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release Version ${{ steps.get_version.outputs.version }}
      - name: Create Pull Request
        id: pr-step
        uses: vsoch/pull-request-action@1.0.12
        env:
          PULL_REQUEST_BRANCH: "master"
          PULL_REQUEST_TITLE: "feat: New Release ${{ steps.get_version.outputs.version }}"
          GITHUB_TOKEN: ${{ secrets.CICD_CREDENTIALS }}
      - name: Force trigger CI
        uses: dogmatic69/actions/automations/pr-toggle@master
        env:
          PULL_REQUEST_NUMBER: |
            ${{ steps.pr-step.outputs.pull_request_number }}
          GITHUB_TOKEN: '${{ secrets.CICD_CREDENTIALS }}'
